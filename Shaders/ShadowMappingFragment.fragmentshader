#version 330 core

// Interpolated values from the vertex shaders
in vec4 ShadowCoord;

// Ouput data
layout(location = 0) out vec3 color;

// Values that stay constant for the whole mesh.
uniform sampler2DShadow shadowMap;

void main(){

	// Light emission properties
	vec3 LightColor = vec3(1,1,1);
	vec3 MaterialDiffuseColor = vec3(1,0,0);
	vec3 ambiantLight = vec3(0.3,0,0);

	float bias = 0.005;//bias removes 'shadow acne'
	//checking if current fragment is further away from light than the nearest occluder from the light's point of view
	float shadow = texture( shadowMap, vec3(ShadowCoord.xy, (ShadowCoord.z-bias)/ShadowCoord.w) );//return a float because we've used a Shadow Sampler

	color = ambiantLight + shadow * MaterialDiffuseColor * LightColor; //sets color of the fragment
}